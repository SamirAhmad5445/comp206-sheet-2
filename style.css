/* global css custom props */
:root {
  --neutral: #030303;
  --primary: #89ff2e;
  --accent: #883cff;
  --electro: #66dbff;
  --night: #525252;
  --ghost: #fff8f2;
}

/* simple reset */
html {
  height: 100%;
  font-size: 100%;
  box-sizing: border-box;
}

body {
  height: 100%;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  background-color: var(--neutral);
  color: var(--ghost);
  overflow-x: hidden;
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

button {
  cursor: pointer;
}

button,
input {
  font: inherit;
  outline: transparent;
}
/* hide the arrow buttons from the number input */
/* chrome & edge */
input:where([type="number"])::-webkit-inner-spin-button {
  display: none;
}
/* firefox */
input:where([type="number"]) {
  -moz-appearance: textfield;
}

h1 {
  position: relative;
  padding-block: 1rem;
  text-align: center;
  /* text-transform: capitalize; */
  font-size: 2.5rem;
  font-weight: 700;
}

/* layout */
.container {
  max-width: 62ch;
  margin-inline: auto;
  padding-inline: 1rem;
  padding-block: 2rem;
}

.question > * + *,
.container > * + * {
  margin-block-start: 1.25rem;
}

/* question one */
.input-section {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.75rem;
}
.input-section > input {
  flex-grow: 1;
}

.number-input {
  padding: 0.5rem 1.5rem;
  background-color: transparent;
  color: inherit;
  border: none;
  border-bottom: 0.125rem solid var(--primary);
  caret-color: var(--primary);
}

.functions-section {
  display: grid;
  grid-template-columns: repeat(3, auto);
  justify-content: center;
}

.output-section {
  display: grid;
  place-items: center;
  grid-template-columns: 1fr;
}

.output-section .array-output {
  display: inline-block;
  width: 100%;
  aspect-ratio: 16 / 7;
  padding: 1.5rem;
  background-color: transparent;
  color: var(--primary);
  border: 0.125rem solid var(--primary);
  border-radius: 1rem;
  font-family: monospace;
  font-size: 1.5rem;
}

/* question 2 */
.phone-section {
  display: grid;
  grid-template-columns: 1fr auto;
  grid-template-rows: 1fr 1fr;
  align-items: center;
  gap: 1rem;
}

/* question 3 */
.drow-area {
  min-width: 100%;
  min-height: 15rem;
  padding: 1.5rem;
  background-color: transparent;
  color: var(--primary);
  border: 0.125rem solid var(--primary);
  border-radius: 1rem;
  font-family: monospace;
  font-size: 1.5rem;
}

.drow-area td {
  min-width: 5rem;
  min-height: 2rem;
}

.drow-area input {
  display: inline-block;
  max-width: 5rem;
  max-height: 2rem;
}

/* btn component */
.btn {
  --btn-background: var(--primary);
  --btn-foreground: var(--neutral);

  display: inline-block;
  margin: 0.25rem;
  padding: 0.5rem 1.5rem;
  border: none;
  border-radius: 0.375rem;
  background-color: var(--btn-background);
  color: var(--btn-foreground);
  text-decoration: none;
  text-transform: capitalize;
  font-weight: 600;
  box-shadow: 0 0 1rem -0.5rem var(--btn-background);
  transition: box-shadow 350ms;
  cursor: pointer;
}

.btn:is(:hover, :focus-visible) {
  box-shadow: 0 0 1rem -0.25rem var(--btn-background);
}

.btn:where([data-btn-type="accent"]) {
  --btn-background: var(--accent);
  --btn-foreground: var(--ghost);
}

.btn:where([data-btn-type="electro"]) {
  --btn-background: var(--electro);
  --btn-foreground: var(--neutral);
}

.btn:where([data-btn-type="ghost"]) {
  --btn-background: var(--ghost);
  --btn-foreground: var(--neutral);
}

/* Explosive Componetnt */
u {
  display: inline-grid;
  place-items: stretch;
  grid-auto-flow: column;
  position: relative;
  isolation: isolate;
  text-decoration: none;
  transition: all 350ms;
  cursor: pointer;
}

u > span {
  position: relative;
  display: inline-block;
  transition: transform 500ms;
  padding-inline-start: 0.125rem;
}

u:is(:hover, :focus) {
  color: var(--electro);
}

u:is(:hover, :focus) > span {
  /* mix-blend-mode: difference; */
  text-shadow: 0 0 0.25em var(--electro);
  animation: floating 3.25s ease-in-out infinite;
}

u:is(:hover, :focus) > span:nth-child(4n + 1) {
  animation-delay: 0;
  transform: translate(0.25em, 0.5em) rotate(5deg) skew(-5deg) scale(1.05);
}

u:is(:hover, :focus) > span:nth-child(4n + 2) {
  animation-delay: 250ms;
  transform: translate(-0.5em, -0.75em) rotate(-20deg) skew(15deg) scale(0.9);
}

u:is(:hover, :focus) > span:nth-child(4n + 3) {
  animation-delay: 370ms;
  transform: translate(0.25em, -0.5em) rotate(-15deg) skew(-10deg) scale(0.95);
}

u:is(:hover, :focus) > span:nth-child(4n + 4) {
  animation-delay: 150ms;
  transform: translate(-0.25em, 0.5em) rotate(10deg) skew(25deg) scale(1.1);
}

u:is(:hover, :focus)[data-underline="true"]::before {
  background-color: transparent;
}

u::before {
  content: "";
  position: absolute;
  bottom: 0rem;
  left: 50%;
  transform: translateX(-50%);
  width: 100%;
  height: 0.75ch;
  border-radius: 0.5rem;
  background-color: var(--accent);
  z-index: -1;
}

@keyframes floating {
  0%,
  100% {
    top: 0;
  }
  20%,
  60% {
    top: -0.125em;
  }
  40% {
    top: 0.25em;
  }
  80% {
    top: 0.125em;
  }
}
